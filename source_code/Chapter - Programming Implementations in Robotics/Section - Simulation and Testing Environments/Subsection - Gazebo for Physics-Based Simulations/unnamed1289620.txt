#!/usr/bin/env python3
import rospy
from gazebo_msgs.srv import SpawnModel, DeleteModel
from geometry_msgs.msg import Pose
import os

class GazeboSimulationManager:
    def __init__(self):
        """Initialize ROS nodes and service proxies for Gazebo interaction."""
        rospy.init_node('gazebo_simulation_manager', anonymous=True)
        self.spawn_model_proxy = rospy.ServiceProxy('/gazebo/spawn_urdf_model', SpawnModel)
        self.delete_model_proxy = rospy.ServiceProxy('/gazebo/delete_model', DeleteModel)
        
    def spawn_robot(self, model_name, model_path, initial_pose):
        """
        Spawn a robot model in Gazebo simulation.
        
        Args:
            model_name (str): Unique name for the model.
            model_path (str): Path to URDF/XACRO file.
            initial_pose (Pose): Initial position and orientation.
        """
        try:
            with open(model_path, 'r') as model_file:
                model_xml = model_file.read()
            
            self.spawn_model_proxy(
                model_name=model_name,
                model_xml=model_xml,
                robot_namespace='',
                initial_pose=initial_pose,
                reference_frame='world'
            )
            rospy.loginfo(f"Spawned {model_name} successfully.")
        except Exception as e:
            rospy.logerr(f"Failed to spawn model: {str(e)}")

    def delete_robot(self, model_name):
        """Remove a model from Gazebo simulation."""
        try:
            self.delete_model_proxy(model_name)
            rospy.loginfo(f"Deleted {model_name} successfully.")
        except Exception as e:
            rospy.logerr(f"Failed to delete model: {str(e)}")

if __name__ == "__main__":
    sim_manager = GazeboSimulationManager()
    
    # Example usage: Spawn a robot at origin
    robot_pose = Pose()
    robot_pose.position.x = 0.0
    robot_pose.position.y = 0.0
    robot_pose.position.z = 0.5  # Slightly above ground
    
    sim_manager.spawn_robot(
        model_name="my_robot",
        model_path=os.path.expanduser("~/catkin_ws/src/my_robot/urdf/robot.urdf"),
        initial_pose=robot_pose
    )
    
    # Simulate for 10 seconds
    rospy.sleep(10.0)
    
    # Cleanup
    sim_manager.delete_robot("my_robot")