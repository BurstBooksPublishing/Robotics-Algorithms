#!/usr/bin/env python3
import rospy
import sys
import moveit_commander
from geometry_msgs.msg import Pose

def motion_planning_with_moveit():
    # Initialize MoveIt and ROS node
    moveit_commander.roscpp_initialize(sys.argv)
    rospy.init_node('moveit_motion_planner', anonymous=True)
    
    # Create a RobotCommander object (interface to the robot)
    robot = moveit_commander.RobotCommander()
    
    # Create a PlanningSceneInterface object (interface to the world)
    scene = moveit_commander.PlanningSceneInterface()
    
    # Create a MoveGroupCommander object (interface to a group of joints)
    arm_group = moveit_commander.MoveGroupCommander("arm_group")
    
    # Set planning parameters
    arm_group.set_planning_time(5.0)  # seconds
    arm_group.set_num_planning_attempts(10)
    
    # Define target pose
    target_pose = Pose()
    target_pose.position.x = 0.5
    target_pose.position.y = 0.2
    target_pose.position.z = 0.3
    target_pose.orientation.w = 1.0
    
    # Set the target pose
    arm_group.set_pose_target(target_pose)
    
    # Plan the motion
    plan = arm_group.plan()
    
    # Execute the plan if successful
    if plan[0]:
        rospy.loginfo("Motion planning successful. Executing...")
        arm_group.execute(plan[1], wait=True)
    else:
        rospy.logerr("Motion planning failed!")
    
    # Shutdown MoveIt
    moveit_commander.roscpp_shutdown()

if __name__ == '__main__':
    try:
        motion_planning_with_moveit()
    except rospy.ROSInterruptException:
        pass